print(data_types)
summary(data)
null_values_count<- colSums(is.na(data))
null_values_dataframe <- data.frame(Column = names(null_values_count), NA_Count = null_values_count)
null_values_dataframe
columns_to_remove <- c('F1994', 'F1995', 'F1996', 'F1997', 'F1998', 'F1999', 'F2000', 'F2001',
'F2002', 'F2003', 'F2004', 'F2005', 'F2006', 'F2007', 'F2008', 'F2009',
'F2010', 'F2011')
filtered_data <- data[, !(names(data) %in% columns_to_remove)]
head(filtered_data,2)
names(filtered_data)
unique_country <- table(data$Country)
cat('There are',length(unique_country),'unique countries in dataset')
null_values_count<- colSums(is.na(filtered_data))
null_values_dataframe <- data.frame(Column = names(null_values_count), NA_Count = null_values_count)
null_values_dataframe
data_cleaned <- na.omit(filtered_data)
shape <- dim(data_cleaned)
cat('Rows:', shape[1], 'Columns:', shape[2], '\n')
head(data_cleaned)
data_cleaned$ObjectId <- seq(1, nrow(data_cleaned))
head(data_cleaned)
write.csv(data_cleaned, "Data.csv", row.names = FALSE)
data<-read.csv("Data.csv")
head(data)
unique_country <- table(data$Country)
cat('There are',length(unique_country),'unique countries in dataset')
library(tidyverse)
exports_data <- filter(data, Indicator == "Environmental goods exports") # filter will be used to extract
exports_data
exports_trend <- colSums(exports_data[, c("F2013", "F2014", "F2015", "F2016", "F2017", "F2018", "F2019", "F2020", "F2021", "F2022")], na.rm = TRUE)
exports_trend
exports_trend <- round(exports_trend / 1000000000) #Converting the tota cost of exports into billion
exports_trend_df <- data.frame(Year = 2013:2022, 'Exports_In_Billions' = exports_trend)
exports_trend_df
ggplot(exports_trend_df, aes(x = Year, y = Exports_In_Billions)) +
geom_line(group = 1, color = '#38599F') +
geom_point(color="#00297b") +
labs(title = "Global Environmental Goods Exports (2013-2022)",
x = "Year",
y = "Total Exports (US Dollars in billions)") +
scale_x_continuous(breaks = 2013:2022) +
scale_y_continuous(breaks = seq(300, 500, by = 25))
env_goods_exports <- subset(data, Indicator == 'Environmental goods exports')
env_goods_exports
years <- paste0('F', 2013:2022)
env_goods_exports_years <- env_goods_exports[, c('Country', years)]
env_goods_exports_years
total_exports_by_year <- colSums(env_goods_exports_years[, -1], na.rm = TRUE)
total_exports_by_year
total_exports_df <- data.frame(Year = as.numeric(sub("F", "", names(total_exports_by_year))),
Total_Export_Value = total_exports_by_year)
total_exports_df <- arrange(total_exports_df, Year)
total_exports_df$Total_Export_Value <- (total_exports_df$Total_Export_Value/1000000000)
total_exports_df
variance_exports <- var(total_exports_df$Total_Export_Value)
sd_exports <- sd(total_exports_df$Total_Export_Value)
variance_exports <- var(total_exports_df$Total_Export_Value)
sd_exports <- sd(total_exports_df$Total_Export_Value)
cat('Variance: ',variance_exports, 'Standard deviation: ',sd_exports)
print(total_exports_df)
cat('Variance of Exports:', variance_exports, '\n')
cat('Standard Deviation of Exports:', sd_exports, '\n')
# Step 4: Create a Linear Regression Model
linear_model <- lm(Total_Export_Value ~ Year, data = total_exports_df)
model_summary <- summary(linear_model)
library(broom)
total_exports_df
total_exports_df$residuals <- residuals(linear_model)
total_exports_df$predicted <- fitted(linear_model)
plot <- ggplot(total_exports_df, aes(x = Year)) +
geom_point(aes(y = Total_Export_Value, color = "Actual Data Points"), size = 3) +
geom_line(aes(y = predicted, color = "Trend Line"), size = 0.77) +
geom_point(aes(y = predicted, color = "Predicted Points on Trend Line",fill="Predicted Points on Trend Line"),
size = 4, shape = 25) +
scale_color_manual(values = c("Actual Data Points" = "#00297b",
"Trend Line" = "#38599f",
"Predicted Points on Trend Line" = "black")) +
scale_fill_manual(values = c("Predicted Points on Trend Line" = "#a5bfd1")) +
guides(color = guide_legend(override.aes = list(fill = c(NA, NA, "#a5bfd1"), shape = c(16, NA, 25), size = c(3, 0.77, 4))),
fill = guide_legend(override.aes = list(color = "black", shape = 25, size = 4))) +
labs(title = "Trend in Global Environmental Goods Exports (2013-2022)",
x = "Year",
y = "Total Export Value",
color = "") +
theme_minimal()
plot + scale_x_continuous(breaks = seq(min(total_exports_df$Year), max(total_exports_df$Year), by = 1))
selected_data <- exports_data %>%
select(Country, F2018, F2019, F2020, F2021, F2022)
head(exports_data)
head(selected_data)
# Step 3: Check for each country if the exports have increased every year
increasing_exports <- selected_data %>%
filter(F2018 < F2019 & F2019 < F2020 & F2020 < F2021 & F2021 < F2022) %>%
arrange(desc(F2022))
head(increasing_exports)
increasing_exports_long <- increasing_exports %>%
gather(key = "Year", value = "Exports", -Country) %>%
mutate(Year = as.numeric(sub("F", "", Year)))
increasing_exports_long$Exports=round(increasing_exports_long$Exports/1000000000)
top_three_countries <- head(increasing_exports, 3)
top_three_countries_names <- top_three_countries$Country
top_three_countries_long <- increasing_exports_long %>%
filter(Country %in% top_three_countries_names)
top_three_countries_long <- top_three_countries_long %>%
mutate(Country_Year = paste(Country, Year, sep = "-"))
top_three_countries_long
ggplot(top_three_countries_long, aes(x = Country, y = Exports, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_fill_manual(values = c("2018" = "#00297b", "2019" = "#38599F", "2020" = "#698bbD", "2021" = "#A5bfd1", "2022" = "#f1f1d2")) +
labs(title = "Environmental Goods Exports Trend (2018-2022)",
x = "Country",
y = "Exports (US Dollars in billions)",
fill = "Year") +
theme_minimal() +
scale_y_continuous(breaks = seq(0,15,by=1))
theme(legend.position = "bottom")
# Define the groups of countries
landlocked_countries_group <- c('Czech Republic', 'Hungary', 'Azerbaijan', 'Bolivia', 'Georgia')
coastal_countries_group <- c('Chile', 'Greece', 'Jordan', 'Estonia', 'Mozambique')
# Filter data for the specified countries, indicators, and the year 2022
filtered_group_data <- data %>%
filter(Country %in% c(landlocked_countries_group, coastal_countries_group),
Indicator %in% c('Environmental goods imports', 'Environmental goods exports'),
Trade_Flow %in% c('Imports', 'Exports')) %>%
select(Country, Indicator, Trade_Flow, F2022)
# Display the filtered data
head(filtered_group_data)
# Add a new column for country classification
filtered_group_data$Country_Classification <- ifelse(filtered_group_data$Country %in% landlocked_countries_group, 'Landlocked', 'Coastal')
# Calculate total trade (imports and exports) for landlocked and coastal groups
total_trade_group <- filtered_group_data %>%
group_by(Country_Classification, Trade_Flow) %>%
summarise(Total_Trade = sum(F2022)) %>%
spread(key = Trade_Flow, value = Total_Trade)
# Display the total trade group
total_trade_group$Exports<- total_trade_group$Exports/10000000000
total_trade_group$Imports <- total_trade_group$Imports/10000000000
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("Environmental Goods Imports and Exports in 2022: Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
trade_balance_data <- filter(data, data$Indicator == 'Environmental goods trade balance')
trade_balance_data
asian_countries = c('Afghanistan', 'Armenia', 'Azerbaijan', 'Bahrain', 'Bangladesh', 'Bhutan', 'Brunei Darussalam', 'Cambodia', 'China', 'Cyprus', 'Georgia', 'India', 'Indonesia', 'Iran (Islamic Republic of)', 'Iraq', 'Israel', 'Japan', 'Jordan', 'Kazakhstan', 'Kuwait', 'Kyrgyzstan', 'Lao People\'s Democratic Republic', 'Lebanon', 'Malaysia', 'Maldives', 'Mongolia', 'Myanmar', 'Nepal', 'Korea (Democratic People\'s Republic of)', 'Oman', 'Pakistan', 'Palestine', 'Philippines', 'Qatar', 'Saudi Arabia', 'Singapore', 'Korea (Republic of)', 'Sri Lanka', 'Syrian Arab Republic', 'Taiwan', 'Tajikistan', 'Thailand', 'Timor-Leste', 'Turkey', 'Turkmenistan', 'United Arab Emirates', 'Uzbekistan', 'Viet Nam', 'Yemen')
european_countries = c('Albania', 'Andorra', 'Austria', 'Belarus', 'Belgium', 'Bosnia and Herzegovina', 'Bulgaria', 'Croatia', 'Cyprus', 'Czech Republic', 'Denmark', 'Estonia', 'Finland', 'France', 'Germany', 'Greece', 'Hungary', 'Iceland', 'Ireland', 'Italy', 'Latvia', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Malta', 'Moldova', 'Monaco', 'Montenegro', 'Netherlands', 'North Macedonia', 'Norway', 'Poland', 'Portugal', 'Romania', 'Russian Federation', 'San Marino', 'Serbia', 'Slovakia', 'Slovenia', 'Spain', 'Sweden', 'Switzerland', 'Ukraine', 'United Kingdom', 'Vatican City State (Holy See)')
trade_balance_data$Region <- ifelse(trade_balance_data$Country %in% asian_countries, 'Asia',
ifelse(trade_balance_data$Country %in% european_countries, 'Europe', 'Other'))
trade_balance_data
# Select the columns for years and Region
years <- c('F2015', 'F2016', 'F2017', 'F2018', 'F2019', 'F2020', 'F2021', 'F2022')
agg_data <- trade_balance_data %>%
select(one_of(c("Region", years)))
# Group by 'Region' and calculate the sum for each year
agg_data <- agg_data %>%
group_by(Region) %>%
summarise(across(.cols = everything(), .fns = sum, na.rm = TRUE))
# Filter only 'Asia' and 'Europe'
agg_data <- agg_data %>%
filter(Region %in% c('Asia', 'Europe'))
agg_data
result6 <- data.frame(Year = 2015:2022,
'Asia' = t(agg_data[1,2:ncol(agg_data)]),
'Europe' = t(agg_data[2,2:ncol(agg_data)]))
result6
ggplot(result6, aes(x = Year)) +
geom_line(aes(y = Asia / 1000000000, label='Asia'), color = "red", linetype = "solid") +
geom_line(aes(y = Europe / 1000000000, label='Europe'), color = "blue", linetype = "solid") +
labs(
title = "Total Trade Balance by Year (in Billions)",
x = "Year",
y = "Trade Balance"
) +
scale_color_manual(values = c("Asia" = "red", "Europe" = "blue"),
name = "Legend",
labels = c('Asia', 'Europe')) +
theme_minimal()
correlation_coefficient <- cor(result6['Asia'], result6['Europe'])
cat("Pearson Correlation Coefficient:", correlation_coefficient, "\n")
us_data = filter(trade_balance_data, Counterpart_Country == "United States")
us_data <- us_data %>%
select("Country", "F2010", "F2011", "F2012", "F2013", "F2014", "F2015", "F2016", "F2017", "F2018", "F2019", "F2020", "F2021", "F2022")
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("Environmental Goods Imports and Exports in 2022: Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("Environmental Goods Imports and Exports in 2022:Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("Environmental Goods Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow,main="Environmental Goods Imports and Exports in 2022 Landlocked vs Coastal Countries" )) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow),main="Environmental Goods Imports and Exports in 2022 Landlocked vs Coastal Countries" ) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))+title("Environmental Goods Imports and Exports in 2022 Landlocked vs Coastal Countries" ))
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("Good Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("Environmental Good Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("Environmental Good Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("EGood Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("Env Good Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("Env. Good Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)") +
xlab("Country Classification") +
ggtitle("ENV. Good Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c
("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (log scale)", labels = scales::comma_format()) +
xlab("Country Classification") +
ggtitle("ENV. Good Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c("#38599f","#a5bfd1"))
p
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade (in millions)", labels = scales::comma_format(scale = 1e-6)) +
xlab("Country Classification") +
ggtitle("ENV. Good Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c("#38599f","#a5bfd1"))
p <- ggplot(filtered_group_data, aes(x = Country_Classification, y = F2022, fill = Trade_Flow)) +
geom_bar(stat = "identity", position = "dodge", width = 0.7) +
scale_y_log10("Environmental Goods Trade", labels = scales::comma_format()) +
xlab("Country Classification") +
ggtitle("ENV. Good Imports and Exports in 2022 Landlocked vs Coastal Countries") +
theme_minimal() +
scale_fill_manual(values = c("#38599f","#a5bfd1"))
p
library(readr)
Data <- read_csv("Data.csv")
View(Data)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(ggplot2)
data<- read.csv('Bilateral_Trade_in_Environmental_Goods.csv')
head(data)
shape <- dim(data)
cat('Rows:', shape[1], 'Columns:', shape[2], '\n')
data_types <- sapply(data, class)
print(data_types)
summary(data)
null_values_count<- colSums(is.na(data))
null_values_dataframe <- data.frame(Column = names(null_values_count), NA_Count = null_values_count)
null_values_dataframe
columns_to_remove <- c('ISO3', 'Counterpart_ISO3', 'Source', 'CTS_Code', 'CTS_Name', 'CTS_Full_Descriptor', 'Unit', 'Scale', 'F1994', 'F1995', 'F1996', 'F1997', 'F1998', 'F1999', 'F2000', 'F2001', 'F2002', 'F2003', 'F2004', 'F2005', 'F2006', 'F2007', 'F2008', 'F2009', 'F2010', 'F2011')
filtered_data <- data[, !(names(data) %in% columns_to_remove)]
head(filtered_data,2)
names(filtered_data)
unique_country <- table(data$Country)
cat('There are',length(unique_country),'unique countries in dataset')
null_values_count<- colSums(is.na(filtered_data))
null_values_dataframe <- data.frame(Column = names(null_values_count), NA_Count = null_values_count)
null_values_dataframe
data_cleaned <- na.omit(filtered_data)
shape <- dim(data_cleaned)
cat('Rows:', shape[1], 'Columns:', shape[2], '\n')
head(data_cleaned)
data_cleaned$ObjectId <- seq(1, nrow(data_cleaned))
head(data_cleaned)
write.csv(data_cleaned, "Data.csv", row.names = FALSE)
data<-read.csv("Data.csv")
head(data)
unique_country <- table(data$Country)
cat('There are',length(unique_country),'unique countries in dataset')
exports_data <- filter(data, Indicator == "Environmental goods exports")
head(exports_data)
exports_trend <- colSums(exports_data[, c("F2013", "F2014", "F2015", "F2016", "F2017", "F2018", "F2019", "F2020", "F2021", "F2022")], na.rm = TRUE)
exports_trend
exports_trend <- round(exports_trend / 1000000000) #Converting the tota cost of exports into billion
exports_trend_df <- data.frame(Year = 2013:2022, 'Exports_In_Billions' = exports_trend)
head(exports_trend_df)
ggplot(exports_trend_df, aes(x = Year, y = Exports_In_Billions)) +
geom_line(group = 1, color = '#38599F') +
geom_point(color="#00297b") +
labs(title = "Global Environmental Goods Exports (2013-2022)",
x = "Year",
y = "Total Exports (US Dollars in billions)") +
scale_x_continuous(breaks = 2013:2022) +
scale_y_continuous(breaks = seq(300, 500, by = 25))
env_goods_exports <- subset(data, Indicator == 'Environmental goods exports')
head(env_goods_exports)
years <- paste0('F', 2013:2022)
env_goods_exports_years <- env_goods_exports[, c('Country', years)]
head(env_goods_exports_years)
total_exports_by_year <- colSums(env_goods_exports_years[, -1], na.rm = TRUE)
head(total_exports_by_year, 3)
total_exports_df <- data.frame(Year = as.numeric(sub("F", "", names(total_exports_by_year))),
Total_Export_Value = total_exports_by_year)
total_exports_df <- arrange(total_exports_df, Year)
total_exports_df$Total_Export_Value <- (total_exports_df$Total_Export_Value/1000000000)
head(total_exports_df)
variance_exports <- var(total_exports_df$Total_Export_Value)
sd_exports <- sd(total_exports_df$Total_Export_Value)
print(total_exports_df)
cat('Variance of Exports:', variance_exports, '\n')
cat('Standard Deviation of Exports:', sd_exports, '\n')
linear_model <- lm(Total_Export_Value ~ Year, data = total_exports_df)
model_summary <- summary(linear_model)
model_summary
head(total_exports_df)
=========
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(tidyverse)
library(ggplot2)
data<- read.csv('Bilateral_Trade_in_Environmental_Goods.csv')
head(data)
shape <- dim(data)
cat('Rows:', shape[1], 'Columns:', shape[2], '\n')
data_types <- sapply(data, class)
print(data_types)
summary(data)
null_values_count<- colSums(is.na(data))
null_values_dataframe <- data.frame(Column = names(null_values_count), NA_Count = null_values_count)
null_values_dataframe
columns_to_remove <- c('ISO3', 'Counterpart_ISO3', 'Source', 'CTS_Code', 'CTS_Name', 'CTS_Full_Descriptor', 'Unit', 'Scale', 'F1994', 'F1995', 'F1996', 'F1997', 'F1998', 'F1999', 'F2000', 'F2001', 'F2002', 'F2003', 'F2004', 'F2005', 'F2006', 'F2007', 'F2008', 'F2009', 'F2010', 'F2011')
filtered_data <- data[, !(names(data) %in% columns_to_remove)]
head(filtered_data,2)
names(filtered_data)
unique_country <- table(data$Country)
cat('There are',length(unique_country),'unique countries in dataset')
null_values_count<- colSums(is.na(filtered_data))
null_values_dataframe <- data.frame(Column = names(null_values_count), NA_Count = null_values_count)
null_values_dataframe
data_cleaned <- na.omit(filtered_data)
shape <- dim(data_cleaned)
cat('Rows:', shape[1], 'Columns:', shape[2], '\n')
head(data_cleaned)
data_cleaned$ObjectId <- seq(1, nrow(data_cleaned))
head(data_cleaned)
write.csv(data_cleaned, "Data.csv", row.names = FALSE)
data<-read.csv("Data.csv")
head(data)
unique_country <- table(data$Country)
cat('There are',length(unique_country),'unique countries in dataset')
exports_data <- filter(data, Indicator == "Environmental goods exports")
head(exports_data)
exports_trend <- colSums(exports_data[, c("F2013", "F2014", "F2015", "F2016", "F2017", "F2018", "F2019", "F2020", "F2021", "F2022")], na.rm = TRUE)
exports_trend
exports_trend <- round(exports_trend / 1000000000) #Converting the tota cost of exports into billion
exports_trend_df <- data.frame(Year = 2013:2022, 'Exports_In_Billions' = exports_trend)
head(exports_trend_df)
ggplot(exports_trend_df, aes(x = Year, y = Exports_In_Billions)) +
geom_line(group = 1, color = '#38599F') +
geom_point(color="#00297b") +
labs(title = "Global Environmental Goods Exports (2013-2022)",
x = "Year",
y = "Total Exports (US Dollars in billions)") +
scale_x_continuous(breaks = 2013:2022) +
scale_y_continuous(breaks = seq(300, 500, by = 25))
env_goods_exports <- subset(data, Indicator == 'Environmental goods exports')
head(env_goods_exports)
years <- paste0('F', 2013:2022)
env_goods_exports_years <- env_goods_exports[, c('Country', years)]
head(env_goods_exports_years)
total_exports_by_year <- colSums(env_goods_exports_years[, -1], na.rm = TRUE)
head(total_exports_by_year, 3)
total_exports_df <- data.frame(Year = as.numeric(sub("F", "", names(total_exports_by_year))),
Total_Export_Value = total_exports_by_year)
total_exports_df <- arrange(total_exports_df, Year)
total_exports_df$Total_Export_Value <- (total_exports_df$Total_Export_Value/1000000000)
head(total_exports_df)
variance_exports <- var(total_exports_df$Total_Export_Value)
sd_exports <- sd(total_exports_df$Total_Export_Value)
print(total_exports_df)
cat('Variance of Exports:', variance_exports, '\n')
cat('Standard Deviation of Exports:', sd_exports, '\n')
linear_model <- lm(Total_Export_Value ~ Year, data = total_exports_df)
model_summary <- summary(linear_model)
model_summary
total_exports_df$residuals <- residuals(linear_model)
total_exports_df$predicted <- fitted(linear_model)
total_exports_df$residuals <- residuals(linear_model)
plot <- ggplot(total_exports_df, aes(x = Year)) +
geom_point(aes(y = Total_Export_Value, color = "Actual Data Points"), size = 3) +
geom_line(aes(y = predicted, linetype = "Trend Line"), size = 0.77, color = "#38599f") +
geom_point(aes(y = predicted, color = "Predicted Points"), size = 4, shape = 17) +
scale_color_manual(values = c("Actual Data Points" = "#00297b",
"Predicted Points" = "#a5bfd1")) +
scale_linetype_manual(values = c("Trend Line" = "solid")) +
labs(title = "Trend in Global Environmental Goods Exports (2013-2022)",
x = "Year",
y = "Total Export Value (in billions)",
color = "Legend",
linetype = "Legend") +
theme_minimal() +
scale_x_continuous(breaks = seq(min(total_exports_df$Year), max(total_exports_df$Year), by = 1)) +
guides(color = guide_legend(override.aes = list(shape = c(16, 17), size = c(3, 4))),
linetype = guide_legend(override.aes = list(size = 0.77)))+scale_y_continuous(breaks = seq(300, 500, by = 25))
print(plot)
# Mean Squared Error
mse <- mean(total_exports_df$residuals^2)
```{r}
# Mean Squared Error
mse <- mean(total_exports_df$residuals^2)
cat("Mean Squared Error: ", mse, "\n")
cat("Mean Absolute Error: ", mae, "\n")
